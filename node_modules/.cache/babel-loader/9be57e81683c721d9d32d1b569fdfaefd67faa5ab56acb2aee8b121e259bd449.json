{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davef\\\\OneDrive\\\\Desktop\\\\work\\\\projects\\\\name generator\\\\dnd-name-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NameGenerator from './NameGenerator';\nimport GenderSelector from './GenderSelector';\nimport Selector from './Selector';\nimport races from './races';\nimport cultures from './cultures';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedGender, setSelectedGender] = useState('male');\n  const [selectedRace, setSelectedRace] = useState('Human');\n  const [selectedCulture, setSelectedCulture] = useState('Human');\n  const handleGenderChange = newGender => {\n    setSelectedGender(newGender);\n  };\n  const handleRaceChange = newRace => {\n    setSelectedRace(newRace);\n  };\n  const handleCultureChange = newCulture => {\n    setSelectedCulture(newCulture);\n  };\n  const handleRandomize = () => {\n    const randomGenderIndex = Math.floor(Math.random() * 2); // 0 or 1 for male or female\n    const randomRaceIndex = Math.floor(Math.random() * races.length);\n    const randomCultureIndex = Math.floor(Math.random() * cultures.length);\n    const randomGender = randomGenderIndex === 0 ? 'male' : 'female';\n    const randomRace = races[randomRaceIndex];\n    const randomCulture = cultures[randomCultureIndex];\n    setSelectedGender(randomGender);\n    setSelectedRace(randomRace);\n    setSelectedCulture(randomCulture);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"D&D Character Name Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenderSelector, {\n      onChange: handleGenderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Selector, {\n      options: races,\n      label: \"Race\",\n      onChange: handleRaceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Selector, {\n      options: cultures,\n      label: \"Culture\",\n      onChange: handleCultureChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRandomize,\n      children: \"Randomize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameGenerator, {\n      selectedGender: selectedGender,\n      selectedRace: selectedRace,\n      selectedCulture: selectedCulture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bbkp2O2DXVb2+cKkQiNct3Wd91w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NameGenerator","GenderSelector","Selector","races","cultures","jsxDEV","_jsxDEV","App","_s","selectedGender","setSelectedGender","selectedRace","setSelectedRace","selectedCulture","setSelectedCulture","handleGenderChange","newGender","handleRaceChange","newRace","handleCultureChange","newCulture","handleRandomize","randomGenderIndex","Math","floor","random","randomRaceIndex","length","randomCultureIndex","randomGender","randomRace","randomCulture","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","label","onClick","_c","$RefreshReg$"],"sources":["C:/Users/davef/OneDrive/Desktop/work/projects/name generator/dnd-name-generator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NameGenerator from './NameGenerator';\nimport GenderSelector from './GenderSelector';\nimport Selector from './Selector';\nimport races from './races';\nimport cultures from './cultures';\n\nfunction App() {\n  const [selectedGender, setSelectedGender] = useState('male');\n  const [selectedRace, setSelectedRace] = useState('Human');\n  const [selectedCulture, setSelectedCulture] = useState('Human');\n\n  const handleGenderChange = (newGender) => {\n    setSelectedGender(newGender);\n  };\n\n  const handleRaceChange = (newRace) => {\n    setSelectedRace(newRace);\n  };\n\n  const handleCultureChange = (newCulture) => {\n    setSelectedCulture(newCulture);\n  };\n\n  const handleRandomize = () => {\n    const randomGenderIndex = Math.floor(Math.random() * 2); // 0 or 1 for male or female\n    const randomRaceIndex = Math.floor(Math.random() * races.length);\n    const randomCultureIndex = Math.floor(Math.random() * cultures.length);\n\n    const randomGender = randomGenderIndex === 0 ? 'male' : 'female';\n    const randomRace = races[randomRaceIndex];\n    const randomCulture = cultures[randomCultureIndex];\n\n    setSelectedGender(randomGender);\n    setSelectedRace(randomRace);\n    setSelectedCulture(randomCulture);\n  };\n\n  return (\n    <div>\n      <h1>D&D Character Name Generator</h1>\n      <GenderSelector onChange={handleGenderChange} />\n      <Selector options={races} label=\"Race\" onChange={handleRaceChange} />\n      <Selector options={cultures} label=\"Culture\" onChange={handleCultureChange} />\n      <button onClick={handleRandomize}>Randomize</button>\n      <NameGenerator \n        selectedGender={selectedGender} \n        selectedRace={selectedRace} \n        selectedCulture={selectedCulture} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}