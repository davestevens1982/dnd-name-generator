{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davef\\\\OneDrive\\\\Desktop\\\\work\\\\projects\\\\name generator\\\\dnd-name-generator\\\\src\\\\NameGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport maleFirstNames from './maleFirstNames';\nimport femaleFirstNames from './femaleFirstNames';\nimport lastNames from './lastNames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NameGenerator = () => {\n  _s();\n  const [names, setNames] = useState([]);\n  const generateNames = () => {\n    const generatedNames = [];\n    const numNames = 10; // Maximum number of names to generate\n\n    for (let i = 0; i < numNames; i++) {\n      const firstName = Math.random() >= 0.5 ? getRandomItem(maleFirstNames) : getRandomItem(femaleFirstNames);\n      const lastName = getRandomItem(lastNames);\n      generatedNames.push({\n        firstName,\n        lastName\n      });\n    }\n    setNames(generatedNames);\n  };\n  const getRandomItem = array => {\n    return array[Math.floor(Math.random() * array.length)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateNames,\n      children: \"Generate Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [name.firstName, \" \", name.lastName]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(NameGenerator, \"OEGSqC8ah6JtdOYoBM2eAmD03sU=\");\n_c = NameGenerator;\nexport default NameGenerator;\nvar _c;\n$RefreshReg$(_c, \"NameGenerator\");","map":{"version":3,"names":["React","useState","maleFirstNames","femaleFirstNames","lastNames","jsxDEV","_jsxDEV","NameGenerator","_s","names","setNames","generateNames","generatedNames","numNames","i","firstName","Math","random","getRandomItem","lastName","push","array","floor","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","name","index","_c","$RefreshReg$"],"sources":["C:/Users/davef/OneDrive/Desktop/work/projects/name generator/dnd-name-generator/src/NameGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport maleFirstNames from './maleFirstNames';\r\nimport femaleFirstNames from './femaleFirstNames';\r\nimport lastNames from './lastNames';\r\n\r\nconst NameGenerator = () => {\r\n  const [names, setNames] = useState([]);\r\n\r\n  const generateNames = () => {\r\n    const generatedNames = [];\r\n    const numNames = 10; // Maximum number of names to generate\r\n\r\n    for (let i = 0; i < numNames; i++) {\r\n      const firstName = Math.random() >= 0.5 ? getRandomItem(maleFirstNames) : getRandomItem(femaleFirstNames);\r\n      const lastName = getRandomItem(lastNames);\r\n      generatedNames.push({ firstName, lastName });\r\n    }\r\n\r\n    setNames(generatedNames);\r\n  };\r\n\r\n  const getRandomItem = (array) => {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={generateNames}>Generate Names</button>\r\n      <h2>Generated Names</h2>\r\n      <ul>\r\n        {names.map((name, index) => (\r\n          <li key={index}>{name.firstName} {name.lastName}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameGenerator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,cAAc,GAAG,EAAE;IACzB,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;;IAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAGC,aAAa,CAAChB,cAAc,CAAC,GAAGgB,aAAa,CAACf,gBAAgB,CAAC;MACxG,MAAMgB,QAAQ,GAAGD,aAAa,CAACd,SAAS,CAAC;MACzCQ,cAAc,CAACQ,IAAI,CAAC;QAAEL,SAAS;QAAEI;MAAS,CAAC,CAAC;IAC9C;IAEAT,QAAQ,CAACE,cAAc,CAAC;EAC1B,CAAC;EAED,MAAMM,aAAa,GAAIG,KAAK,IAAK;IAC/B,OAAOA,KAAK,CAACL,IAAI,CAACM,KAAK,CAACN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGI,KAAK,CAACE,MAAM,CAAC,CAAC;EACxD,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAQmB,OAAO,EAAEd,aAAc;MAAAa,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDvB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAAkB,QAAA,EACGf,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB1B,OAAA;QAAAkB,QAAA,GAAiBO,IAAI,CAAChB,SAAS,EAAC,GAAC,EAACgB,IAAI,CAACZ,QAAQ;MAAA,GAAtCa,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/BID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}