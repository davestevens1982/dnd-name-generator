{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davef\\\\OneDrive\\\\Desktop\\\\work\\\\projects\\\\name generator\\\\dnd-name-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NameGenerator from './NameGenerator';\nimport GenderSelector from './GenderSelector';\nimport Selector from './Selector';\nimport races from './races';\nimport cultures from './cultures';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedGender, setSelectedGender] = useState('male');\n  const [selectedRace, setSelectedRace] = useState('Human');\n  const [selectedCulture, setSelectedCulture] = useState('Human');\n  const handleGenderChange = newGender => {\n    setSelectedGender(newGender);\n  };\n  const handleRaceChange = newRace => {\n    setSelectedRace(newRace);\n  };\n  const handleCultureChange = newCulture => {\n    setSelectedCulture(newCulture);\n  };\n  const generateName = () => {\n    // Generate a single name logic here\n  };\n  const generateNames = () => {\n    const generatedNames = [];\n    for (let i = 0; i < 10; i++) {\n      const randomGenderIndex = Math.floor(Math.random() * 2); // 0 or 1 for male or female\n      const randomRaceIndex = Math.floor(Math.random() * races.length);\n      const randomCultureIndex = Math.floor(Math.random() * cultures.length);\n      const randomGender = randomGenderIndex === 0 ? 'male' : 'female';\n      const randomRace = races[randomRaceIndex];\n      const randomCulture = cultures[randomCultureIndex];\n      generatedNames.push({\n        gender: randomGender,\n        race: randomRace,\n        culture: randomCulture\n      });\n    }\n    console.log(generatedNames); // For debugging\n    // Set generated names state or perform any other logic with the generated names\n  };\n\n  // Add \"Random\" option to the beginning of the options list\n  const raceOptions = ['Random', ...races];\n  const cultureOptions = ['Random', ...cultures];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"D&D Character Name Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenderSelector, {\n      onChange: handleGenderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Selector, {\n      options: raceOptions,\n      label: \"Race\",\n      onChange: handleRaceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Selector, {\n      options: cultureOptions,\n      label: \"Culture\",\n      onChange: handleCultureChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameGenerator, {\n      selectedGender: selectedGender,\n      selectedRace: selectedRace,\n      selectedCulture: selectedCulture,\n      generateName: generateName // Pass the generateName function as prop\n      ,\n      generateNames: generateNames // Pass the generateNames function as prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bbkp2O2DXVb2+cKkQiNct3Wd91w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NameGenerator","GenderSelector","Selector","races","cultures","jsxDEV","_jsxDEV","App","_s","selectedGender","setSelectedGender","selectedRace","setSelectedRace","selectedCulture","setSelectedCulture","handleGenderChange","newGender","handleRaceChange","newRace","handleCultureChange","newCulture","generateName","generateNames","generatedNames","i","randomGenderIndex","Math","floor","random","randomRaceIndex","length","randomCultureIndex","randomGender","randomRace","randomCulture","push","gender","race","culture","console","log","raceOptions","cultureOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","label","_c","$RefreshReg$"],"sources":["C:/Users/davef/OneDrive/Desktop/work/projects/name generator/dnd-name-generator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NameGenerator from './NameGenerator';\nimport GenderSelector from './GenderSelector';\nimport Selector from './Selector';\nimport races from './races';\nimport cultures from './cultures';\n\nfunction App() {\n  const [selectedGender, setSelectedGender] = useState('male');\n  const [selectedRace, setSelectedRace] = useState('Human');\n  const [selectedCulture, setSelectedCulture] = useState('Human');\n\n  const handleGenderChange = (newGender) => {\n    setSelectedGender(newGender);\n  };\n\n  const handleRaceChange = (newRace) => {\n    setSelectedRace(newRace);\n  };\n\n  const handleCultureChange = (newCulture) => {\n    setSelectedCulture(newCulture);\n  };\n\n  const generateName = () => {\n    // Generate a single name logic here\n  };\n\n  const generateNames = () => {\n    const generatedNames = [];\n    for (let i = 0; i < 10; i++) {\n      const randomGenderIndex = Math.floor(Math.random() * 2); // 0 or 1 for male or female\n      const randomRaceIndex = Math.floor(Math.random() * races.length);\n      const randomCultureIndex = Math.floor(Math.random() * cultures.length);\n\n      const randomGender = randomGenderIndex === 0 ? 'male' : 'female';\n      const randomRace = races[randomRaceIndex];\n      const randomCulture = cultures[randomCultureIndex];\n\n      generatedNames.push({\n        gender: randomGender,\n        race: randomRace,\n        culture: randomCulture\n      });\n    }\n    console.log(generatedNames); // For debugging\n    // Set generated names state or perform any other logic with the generated names\n  };\n\n  // Add \"Random\" option to the beginning of the options list\n  const raceOptions = ['Random', ...races];\n  const cultureOptions = ['Random', ...cultures];\n\n  return (\n    <div>\n      <h1>D&D Character Name Generator</h1>\n      <GenderSelector onChange={handleGenderChange} />\n      <Selector options={raceOptions} label=\"Race\" onChange={handleRaceChange} />\n      <Selector options={cultureOptions} label=\"Culture\" onChange={handleCultureChange} />\n      <NameGenerator \n        selectedGender={selectedGender} \n        selectedRace={selectedRace} \n        selectedCulture={selectedCulture} \n        generateName={generateName} // Pass the generateName function as prop\n        generateNames={generateNames} // Pass the generateNames function as prop\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}